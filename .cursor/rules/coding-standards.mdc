---
globs: *.ts,*.tsx,*.js,*.jsx
---

# Coding Standards

## TypeScript & React
- Always use TypeScript with strict typing
- Use functional components with hooks
- Prefer `'use client'` directive for client components
- Use proper TypeScript interfaces from [src/lib/types.ts](mdc:src/lib/types.ts)
- Export components as default exports

## Styling
- Use Tailwind CSS classes exclusively
- Use the `cn()` utility from [src/lib/utils.ts](mdc:src/lib/utils.ts) for conditional classes
- Follow the design system established in [src/components/ui/](mdc:src/components/ui/)
- Use responsive design with mobile-first approach

## Component Structure
- Keep components focused and single-purpose
- Use proper prop typing with interfaces
- Follow the existing component patterns in [src/components/](mdc:src/components/)
- Use shadcn/ui components when possible

## File Organization
- Components go in [src/components/](mdc:src/components/)
- Utilities go in [src/lib/](mdc:src/lib/)
- Custom hooks go in [src/hooks/](mdc:src/hooks/)
- Use absolute imports with `@/` prefix as configured in [tsconfig.json](mdc:tsconfig.json)